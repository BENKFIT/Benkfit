<?xml version="1.0" encoding="UTF-8"?>

<beans:beans 
    xmlns="http://www.springframework.org/schema/security" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"	
	xsi:schemaLocation="http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd		
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- 
	    servlet-context.xml에서 복사한 후 수정
	    1. 맨위 xmlns:security="http://www.springframework.org/schema/security"  xmlns="http://~~" 으로 수정
	    2. mvc 삭제
	-->
	<!-- 정적 리소스 파일들에는 보안 설정을 하지 않음 -->
	<http pattern="/resources/**" security="none" />
	<http pattern="/Template/**" security="none" />
	<http auto-config="true" use-expressions="true" create-session="never">
		<!--관리자 영역 설정-->
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		
		<!-- 권한에 관계없이 접속 가능한 영역(guest도 접속 가능) -->
		<intercept-url pattern="/common/**" access="permitAll" />
		<intercept-url pattern="/engine_bh/**" access="permitAll" />
		
		<!-- 로그인한 사용자 영역 --> 
		<intercept-url pattern="/mypage_kay/**" access="hasAnyRole('ROLE_USER', 'ROLE_TEST', 'ROLE_GUEST')" />
		
		<!-- 로그인폼 -->
		<form-login login-page="/login" 
			login-processing-url="/loginPro"
			authentication-success-handler-ref="userLoginSuccessHandler"
			authentication-failure-handler-ref="userLoginFailureHandler"
			username-parameter="userid" password-parameter="passwd" />
			
		<session-management>
			<!-- max-sessions="1" : 동시접속 막기
				expired-url="/user/login.do" : 세션 만료시 이동할 주소
		    	error-if-maximum-exceeded="true" : 최대 세션 초과시 에러 옵션
		     -->
			<concurrency-control max-sessions="1"
				expired-url="/login"
				error-if-maximum-exceeded="true" />
		</session-management>	
		
		<!-- 접근권한이 없는 경우의 코드 -->
		<access-denied-handler ref="userDeniedHandler" />			
 	</http>	
 	
 	<beans:bean id="userDeniedHandler" class="spring.mvc.benkfit.service.UserDeniedHandler" /> 		
 	<beans:bean id="userLoginSuccessHandler" class="spring.mvc.benkfit.service.UserLoginSuccessHandler" />
 	<beans:bean id="userLoginFailureHandler" class="spring.mvc.benkfit.service.UserLoginFailureHandler" />
 	<!-- 로그인 인증을 처리하는 빈 -->
 	<beans:bean id="userService" class="spring.mvc.benkfit.service.UserAuthenticationService">
 		<beans:constructor-arg name="sqlSession" ref="sqlSession" />
 	</beans:bean>
 	<!-- 비밀번호 암호화를 위한 빈 -->
 	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
 	
</beans:beans>		
