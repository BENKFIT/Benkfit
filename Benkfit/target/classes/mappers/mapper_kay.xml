<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spring.mvc.benkfit.persistence.DAO_kay">

	<!-- 내정보 -->
	<select id="mypage_info"
		resultType="spring.mvc.benkfit.vo.UsersVO">
		select *
		from users_tbl
		where c_id = #{id}
	</select>

	<!-- 예금관리 --><!-- 이체한도 조회 -->
	<select id="myCheq_list"
		resultType="spring.mvc.benkfit.vo.myCheqAccountVO">
		select *
		from myCheqAccount_tbl
		where c_id = #{id}
	</select>

	<!-- 대출관리 -->
	<select id="myloan_list"
		resultType="spring.mvc.benkfit.vo.MyloanAccountVO">
		select *
		from MyloanAccount_tbl
		where c_id = #{id}
	</select>

	<!-- 적금관리 -->
	<select id="mysav_list"
		resultType="spring.mvc.benkfit.vo.MySavAccountVO">
		select *
		from mySavAccount_tbl
		where c_id = #{id}
	</select>

	<!-- id& pwd check -->
	<select id="idPwdChk" resultType="int">
		SELECT count(*)
		FROM users_tbl
		WHERE c_id = #{id} and c_pwd =#{pwd}
	</select>

	<!-- 내정보- 폼 -->
	<select id="info" resultType="spring.mvc.benkfit.vo.UsersVO">
		select *
		from users_tbl
		where c_id = #{id}
	</select>

	<!-- 내정보- 수정처리 -->
	<update id="up_info"
		parameterType="spring.mvc.benkfit.vo.UsersVO">
		update users_tbl
		set c_pwd= #{c_pwd}, c_address= #{c_address}, c_post= #{c_post}, c_hp=
		#{c_hp}, c_email= #{c_email}
		where c_id = #{c_id}
	</update>

	<!-- qr생성후 코드 업데이트 -->
	<update id="qrPro" parameterType="spring.mvc.benkfit.vo.UsersVO">
		update users_tbl
		set c_qr = 1
		where c_id = #{id}
	</update>

	<!-- qrcode -->
	<select id="qrcode" resultType="spring.mvc.benkfit.vo.UsersVO">
		select c_id, c_name, c_hp, c_pwd, c_qr
		from users_tbl
		where c_id = #{id}
	</select>

	<!-- 탈퇴전 예금계좌 잔액 확인. -->
	<select id="chk_cheq" resultType="int"
		parameterType="java.util.Map">
		select NVL(sum(mycheq_amount), 0)
		from mycheqaccount_tbl
		where c_id = #{id} AND mycheq_amount IS NOT NULL
	</select>

	<!-- 탈퇴전 대출계좌 잔액 확인. -->
	<select id="chk_loan" resultType="int">
		select NVL(sum(myloan_amount), 0)
		from myloanaccount_tbl
		where c_id = #{id}
	</select>

	<!-- 탈퇴전 적금계좌 잔액 확인. -->
	<select id="chk_sav" resultType="int">
		select NVL(sum(mysav_amount), 0)
		from mysavaccount_tbl
		where c_id = #{id}
	</select>

	<!-- 회원탈퇴 -->
	<delete id="del_mem" parameterType="String">
		delete from users_tbl
		where c_id = #{id}
	</delete>

	<!-- 이체한도 수정 -->
	<update id="limit_up" parameterType="java.util.Map">
		update myCheqAccount_tbl
		set myCheq_limit = #{myCheq_limit}
		where c_id = #{c_id} and myCheq_account = #{myCheq_account}
	</update>

	<!-- 예금 계좌 조회 -->
	<select id="selCheq"
		resultType="spring.mvc.benkfit.vo.myCheqAccountVO">
		select *
		from myCheqAccount_tbl
		where c_id = #{id} AND mycheq_account = #{account}
	</select>

	<!-- 입급 금액 합계 -->
	<select id="cheqIn" resultType="int">
		select NVL(sum(tran_amount),0)
		from transdetail_tbl
		where c_id = #{id} and tran_account = #{account} and tran_type = '입금'
		<if test="start_date != null and end_date != null">
			and tran_date between #{start_date} and #{end_date}
		</if>
	</select>

	<!-- 출금금액 합계 -->
	<select id="cheqOut" resultType="int">
		select NVL(sum(tran_amount),0)
		from transdetail_tbl
		where c_id = #{id} and tran_account = #{account} and tran_type in('출금','이체')
		<if test="start_date != null and end_date != null">
			and tran_date between #{start_date} and #{end_date}
		</if>
	</select>

	<!-- 거래내역 조회 - 예금 -->
	<select id="sel_cheq"
		resultType="spring.mvc.benkfit.vo.TransDetailVO">
		<![CDATA[
			select * 
			from ( select tran_num , tran_account, tran_out, tran_in , 
					tran_date ,tran_amount, tran_type, 
		        		 c_id, tran_code, rownum rNum  
		        	from ( SELECT * 
		               		FROM transdetail_tbl
		               		where c_id = #{id}  and tran_account = #{account}
		              		) 
		        	)
			where rNum >= #{start} and rNum <= #{end} 
			]]>
		<if test="type == 1">
			and tran_type in ('출금', '입금', '이체')
		</if>
		<if test="type == 2">
			and tran_type ='입금'
		</if>
		<if test="type == 3">
			and tran_type ='출금'
		</if>
		<if test="start_date != null and end_date != null">
			and tran_date between #{start_date} and #{end_date}
		</if>
		<if test="order == 4">
			order by tran_date desc
		</if>
		<if test="order == 5">
			order by tran_date asc
		</if>
	</select>
	
	<!-- 대출 계좌 조회 -->
	<select id="seloan"
		resultType="spring.mvc.benkfit.vo.MyloanAccountVO">
		select *
		from myloanAccount_tbl
		where c_id = #{id} AND myloan_account = #{account}
	</select>
	
	<!-- 거래내역 조회- 대출  -->
	<select id="sel_loan"
		resultType="spring.mvc.benkfit.vo.TransDetailVO">
		<![CDATA[
			select * 
			from ( select tran_num , tran_account, tran_out, tran_in , 
					tran_date ,tran_amount, tran_type, 
		        		 c_id, tran_code, rownum rNum  
		        	from ( SELECT * 
		               		FROM transdetail_tbl
		               		where c_id = #{id} and tran_account = #{account}
		              		) 
		        	)
			where rNum >= #{start} and rNum <= #{end} 
			]]>
		<if test="type == 1">
			and tran_type in ('출금', '입금', '이체')
		</if>
		<if test="type == 2">
			and tran_type ='입금'
		</if>
		<if test="type == 3">
			and tran_type ='출금'
		</if>
		<if test="start_date != null and end_date != null">
			and tran_date between #{start_date} and #{end_date}
		</if>
		<if test="order == 4">
			order by tran_date desc
		</if>
		<if test="order == 5">
			order by tran_date asc
		</if>
	</select>
	
	<!-- 적금 계좌 조회 -->
	<select id="selSav"
		resultType="spring.mvc.benkfit.vo.MySavAccountVO">
		select *
		from mysavAccount_tbl
		where c_id = #{id} AND mysav_account = #{account}
	</select>
	
	<!-- 거래내역 조회- 적금  -->
	<select id="sel_sav"
		resultType="spring.mvc.benkfit.vo.TransDetailVO">
		<![CDATA[
			select * 
			from ( select tran_num , tran_account, tran_out, tran_in , 
					tran_date ,tran_amount, tran_type, 
		        		 c_id, tran_code, rownum rNum  
		        	from ( SELECT * 
		               		FROM transdetail_tbl
		               		where c_id = #{id} and tran_account = #{account}
		              		) 
		        	)
			where rNum >= #{start} and rNum <= #{end} 
			]]>
		<if test="start_date != null and end_date != null">
			and tran_date between #{start_date} and #{end_date}
		</if>
		<if test="order == 4">
			order by tran_date desc
		</if>
		<if test="order == 5">
			order by tran_date asc
		</if>
	</select>

	<!-- 예금잔액 조회 -->
	<select id="delChe" resultType="int"
		parameterType="java.util.Map">
		select NVL(sum(mycheq_amount), 0)
		from mycheqaccount_tbl
		where c_id = #{id} AND mycheq_account = #{account}
		AND mycheq_amount IS NOT NULL
	</select>

	<!-- 계좌pw 체크 -->
	<select id="cheq_pw" resultType="int">
		SELECT count(*)
		FROM myCheqAccount_tbl
		WHERE c_id = #{id} and myCheq_account =#{account} and mycheq_pwd =#{pwd}
	</select>

	<!-- 예금계좌 해지 -->
	<delete id="del_cheq" parameterType="java.util.Map">
		delete from mycheqaccount_tbl
		where c_id = #{id} and mycheq_account = #{account}
	</delete>
	
	<!-- 적금잔액 조회 -->
	<select id="delSav" resultType="int"
		parameterType="java.util.Map">
		select NVL(sum(mySav_amount), 0)
		from mysavaccount_tbl
		where c_id = #{id} AND mySav_account = #{account}
		AND mySav_amount IS NOT NULL
	</select>
	
	<!-- 적금 계좌pw 체크 -->
	<select id="sav_pw" resultType="int">
		SELECT count(*)
		FROM mysavaccount_tbl
		WHERE c_id = #{id} and mySav_account =#{account} and mysav_pwd = #{pwd}
	</select>
	
	<!-- 적금계좌 해지 -->
	<delete id="del_sav" parameterType="java.util.Map">
		delete from mysavaccount_tbl
		where c_id = #{id} and mySav_account = #{account}
	</delete>

	<!-- 서류등록 -->
	<insert id="indocu"
		parameterType="spring.mvc.benkfit.vo.documentVO">
		insert into document_tbl(doc_title, doc_num, doc_date, doc_name, doc_jumin1,
		doc_jumin2,
		doc_perAddress, doc_department, doc_position, doc_period_from, doc_period_to,
		doc_comName, doc_comAddress, doc_img, c_id)
		values(#{doc_title}, doc_num_seq.nextval, sysdate,
		#{doc_name},#{doc_jumin1}, #{doc_jumin2},
		#{doc_perAddress},#{doc_department},#{doc_position},#{doc_period_from},
		#{doc_period_to}, #{doc_comName},#{doc_comAddress}, #{doc_img}
		,#{c_id})
	</insert>
	
	<!-- 서류조회-목록 -->
	<select id="seldocu" resultType="spring.mvc.benkfit.vo.documentVO">
		select * from document_tbl
		where c_id = #{id}
	</select>
	
	<!-- 서류조회 상세 -->
	<select id="detaildocu" resultType="spring.mvc.benkfit.vo.documentVO">
		select * from document_tbl
		where c_id = #{id} and doc_num =#{doc_num}
	</select>
	
	<!-- 서류삭제 -->
	<delete id="deletedocu" parameterType="java.util.Map">
		delete from document_tbl
		where c_id = #{id} and doc_num =#{doc_num}
	</delete>
	
	<!-- 예산 차트 -->
	<select id="budget" resultType="int">
		SELECT NVL(sum(tran_amount), 0)
		FROM transdetail_tbl
		WHERE c_id = #{id}
		and tran_date between #{start_day} and #{end_day}
	</select>
	
	<!-- 1일까지 구하기 -->
	<select id="day" resultType="spring.mvc.benkfit.vo.DateVO">
		select TO_CHAR(SYSDATE, 'YYYY-MM') || '-01' AS start_day
		 , TO_CHAR(SYSDATE, 'YYYY-MM')|| '-01' AS end_day
		FROM DUAL
	</select>
	
	<!-- 10일까지 구하기 -->
	<select id="day1" resultType="spring.mvc.benkfit.vo.DateVO">
		select TO_CHAR(SYSDATE, 'YYYY-MM') || '-01' AS start_day
		 , TO_CHAR(SYSDATE, 'YYYY-MM')|| '-10' AS end_day
		FROM DUAL
	</select>
	
	<!-- 20일까지 구하기 -->
	<select id="day2" resultType="spring.mvc.benkfit.vo.DateVO">
		select TO_CHAR(SYSDATE, 'YYYY-MM') || '-11' AS start_day
		 , TO_CHAR(SYSDATE, 'YYYY-MM')|| '-20' AS end_day
		FROM DUAL
	</select>
	
	<!-- 말일까지 구하기 -->
	<select id="day3" resultType="spring.mvc.benkfit.vo.DateVO">
		select TO_CHAR(SYSDATE, 'YYYY-MM') || '-21' AS start_day
		 ,  TO_CHAR(LAST_DAY(SYSDATE), 'YYYY-MM-DD') AS end_day
		FROM DUAL
	</select>
	
</mapper>